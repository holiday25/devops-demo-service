name: CI

on:
  push:
    branches:
      - main

jobs:
  runner-job:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
     postgres:
        image: postgres:alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres

        ports:
          - 5432:5432

        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
#         source $HOME/.local/bin/
#         poetry config virtualenvs.create false

      - name: Install dependencies with Poetry
        run: |
          poetry install

      - name: Export dependencies to requirements.txt
        run: |
          poetry export --without-hashes -f requirements.txt --output ./requirements.txt

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Make migrations
        run: |
          cd devops_demo
          python manage.py makemigrations
          python manage.py migrate
          
      - name: Run tests
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
        run: |
          cd devops_demo
          python manage.py test

          
      - name: Build Docker image (if successful)
        if: success()
        run: |
          docker build -t myimage:${{ github.sha }} .
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push myimage:${{ github.sha }}
